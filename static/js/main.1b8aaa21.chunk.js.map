{"version":3,"sources":["components/Homepage.jsx","components/Questions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Homepage","data","setIndex","setdifficulty","index","difficulty","undefined","className","style","backgroundColor","height","border","onChange","e","target","value","name","defaultValue","disabled","map","res","id","type","to","Questions","useState","questions","setQuestions","next","setNext","score","setScore","shuffledArray","useEffect","axios","get","then","results","length","correct_answer","incorrect_answers","sort","Math","floor","random","Quiz","dangerouslySetInnerHTML","__html","question","onClick","answers","End","App","setData","trivia_categories","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b8aaa21.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Css/homepage.css';\r\n\r\n\r\nconst Homepage = ({data, setIndex, setdifficulty,index,difficulty}) => {\r\n    if(data === undefined){\r\n        return 'Loading'\r\n    }\r\n    return (\r\n        <div className=\"Homepage-Container\" >\r\n            <h1>Welcome to our <strong>Quiz Game.</strong></h1>\r\n            <h2>Good luck !</h2>\r\n            <br/>\r\n            <hr style={{backgroundColor:\"rgb(174, 179, 179)\" , height:'3px', border:'1px solid white'}} />\r\n            <div className=\"Category-Container\" >\r\n                <h3>Select Category</h3>\r\n                <select onChange={e=>setIndex(e.target.value)} name=\"Category\" defaultValue='Category'>\r\n                    <option  disabled >Category</option>\r\n                    {data.map(res=><option key={res.id} value={res.id} >{res.name}</option>)}\r\n                </select>\r\n            </div> \r\n            <div className='Difficulty-Container' >\r\n            <h3>Select Difficulty</h3>\r\n            <select onChange={e=>setdifficulty(e.target.value)} name=\"Difficulty\" defaultValue=\"Difficulty\">\r\n                <option disabled>Difficulty</option>\r\n                <option value=\"easy\" >Easy</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"hard\">Hard</option>\r\n            </select>\r\n            </div>\r\n            <div>\r\n                {\r\n                index===0 || difficulty===\"\" ?\r\n                    <button className=\"start-btn\" disabled >Start</button>\r\n                    :\r\n                    <button className=\"start-btn\" type=\"button\"> <Link  className='start-link' to=\"/questions\" >Start</Link> </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React,{useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Css/questions.css';\r\nconst Questions = ({index , difficulty}) => {\r\n\r\n    const[questions,setQuestions]=useState([]);\r\n    const[next,setNext]=useState(0);\r\n    const[score,setScore]=useState(0);\r\n    let  shuffledArray=[];\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://opentdb.com/api.php?amount=10&category=${index}&difficulty=${difficulty}`).then(res=>setQuestions(res.data.results));\r\n    }, [])\r\n\r\n    if(questions.length === 0){\r\n        return(\r\n        <div className=\"bouncer\" >\r\n            <div className=\"ball\" ></div>\r\n            <div className=\"ball\" ></div>\r\n            <div className=\"ball\" ></div>\r\n            <div className=\"ball\" ></div>\r\n        </div>\r\n        )\r\n    }   \r\n   \r\n    if(next<10){\r\n        shuffledArray = [questions[next].correct_answer , questions[next].incorrect_answers[0] , questions[next].incorrect_answers[1] , questions[next].incorrect_answers[2]].sort(() => Math.floor(Math.random() - 0.5));\r\n    }\r\n    \r\n    const answers=(e)=>{\r\n        setNext(next+1);\r\n        if(e===questions[next].correct_answer){\r\n            setScore(score+1);\r\n        }\r\n    }\r\n\r\n    const Quiz=()=>(\r\n        <div className=\"Homepage-Container\">\r\n            <p dangerouslySetInnerHTML={{__html:questions[next].question}} />\r\n            <br/>\r\n            <hr/>\r\n            <ul>\r\n                {shuffledArray.map((e,index)=> <li dangerouslySetInnerHTML={{__html:e}}key={index} onClick={()=>{answers(e)}} ></li>)}\r\n            </ul>\r\n            <button className='start-btn' onClick={()=>setNext(next+1)} >Skip</button>\r\n        </div>\r\n    )\r\n\r\n    const End=()=>(\r\n        <div className=\"end-Container\" >\r\n            <p> Final Result</p>  \r\n            <div className=\"circle\" >\r\n                <p>{score}/10</p>\r\n            </div>\r\n            {score >5 ?<p>Well Done!</p>:<p>you can more Try again!</p> }\r\n            \r\n            <button className=\"start-btn\" type=\"button\"> <Link  className='start-link' to=\"/\" >New Test</Link> </button>\r\n            <button className=\"start-btn\" type=\"button\" onClick={()=>{setNext(0); setScore(0)}}>Try again  </button>\r\n        </div>\r\n    )\r\n    return (\r\n    <div>\r\n        {next<10 ? <Quiz /> : <End />}\r\n    </div>\r\n    )\r\n}\r\nexport default Questions\r\n","import React , {useEffect , useState} from \"react\";\nimport axios from 'axios'\nimport {HashRouter as Router , Switch  , Route} from 'react-router-dom';\nimport Homepage from './components/Homepage';\nimport Questions from './components/Questions';\nimport './App.css';  \nfunction App() {\n\n  const [data, setData]=useState([]);\n  const [index,setIndex]=useState(0);\n  const [difficulty,setdifficulty]=useState('');\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then( res=> setData(res.data.trivia_categories));\n  }, [])\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch>\n        <Route path='/' exact> <Homepage data={data} setIndex={setIndex} setdifficulty={setdifficulty} index={index} difficulty={difficulty} /></Route>\n        <Route path='/questions'> <Questions index={index} difficulty={difficulty} /> </Route>\n      </Switch>\n    </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}